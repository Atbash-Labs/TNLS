name: Secret Millionaires

on:
  push:
    paths:
      - 'TNLS-Samples/millionaires/**'

jobs:
  millionaires_problem_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: stable
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /home/runner/.cache/sccache
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    services:
      secret:
        image: ghcr.io/scrtlabs/localsecret:v1.4.1-beta.4
        ports:
          - 5000:5000
          - 9091:9091
    steps:
      - uses: actions/checkout@v2
      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: npm --prefix TNLS-Samples/millionaires/tests/ install
      - uses: ./.github/actions/install-rust
        with:
          toolchain: stable
      - name: Add wasm toolchain
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ubuntu-latest-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: Run cargo clippy
        run: cd TNLS-Samples/millionaires/ && make clippy
      - name: Run unit tests
        run: cd TNLS-Samples/millionaires/ && make unit-test
      - name: Build wasm contract
        run: cd TNLS-Samples/millionaires/ && make build-mainnet
      - name: Build gateway wasm contract
        run: cd TNLS-Gateways/secret/ && make build-mainnet
      - name: Run integration tests
        run: cd TNLS-Samples/millionaires/ && make integration-test
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
